CREATE TABLE savings_accounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    member_id INT NOT NULL,
    account_id INT NOT NULL, -- FK to `accounts` table (e.g., savings account)
    account_number VARCHAR(20) UNIQUE,
    account_type VARCHAR(50), -- optional: "normal", "fixed", etc.
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (member_id) REFERENCES members(id),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);


CREATE TABLE share_accounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    member_id INT NOT NULL,
    account_id INT NOT NULL, -- FK to accounts table (e.g., share capital control account)
    shares_owned INT DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (member_id) REFERENCES members(id),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);


CREATE TABLE `tbl_bank` (
  `id` int(11) NOT NULL,
  `transactionReferenceCode` varchar(255) NOT NULL,
  `transactionDate` varchar(255) NOT NULL,
  `totalAmount` varchar(255) NOT NULL,
  `currency` varchar(255) NOT NULL,
  `documentReferenceNumber` varchar(255) NOT NULL,
  `bankCode` varchar(255) NOT NULL,
  `branchCode` varchar(255) NOT NULL,
  `paymentDate` varchar(255) NOT NULL,
  `paymentReferenceCode` varchar(255) NOT NULL,
  `paymentCode` varchar(255) NOT NULL,
  `paymentMode` varchar(255) NOT NULL,
  `paymentAmount` varchar(255) NOT NULL,
  `additionalInfo` text NOT NULL,
  `accountNumber` varchar(255) NOT NULL,
  `accountName` varchar(255) NOT NULL,
  `institutionCode` varchar(255) NOT NULL,
  `institutionName` varchar(255) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `tbl_bank`
--

INSERT INTO `tbl_bank` (`id`, `transactionReferenceCode`, `transactionDate`, `totalAmount`, `currency`, `documentReferenceNumber`, `bankCode`, `branchCode`, `paymentDate`, `paymentReferenceCode`, `paymentCode`, `paymentMode`, `paymentAmount`, `additionalInfo`, `accountNumber`, `accountName`, `institutionCode`, `institutionName`, `created_at`) VALUES
(1, 'IB116cd8a1d1b44IDP', '2019-08-28T17:32:02.7460598+03:00', '12', 'KES', 'DOC1234', '45', '01', '2019-08-29', 'PAY1234', 'PC001', 'MPESA', '12', 'Test payment', 'EDA/1140/13', 'John Doe', '2100082', 'Eldoret University', '2025-04-09 19:38:56'),
(2, 'IB116cd8a1d1b44IDP', '2019-08-28T17:32:02.7460598+03:00', '12', 'KES', 'DOC1234', '45', '01', '2019-08-24', 'PAY1234', 'PC001', 'MPESA', '12', 'Test payment', 'EDA/1140/13', 'John Doe', '2100082', 'Eldoret University', '2025-04-11 04:00:26'),
(3, 'SAC001', '2019-08-28T17:32:02.7460598+03:00', '12000', 'KES', 'SAC001', '00011', '00011001', '2019-08-28T17:32:02.7460598+03:00', '', '', '1', '12000', 'SAC001', 'SAC001', '', '', '', '2025-04-11 04:34:21');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `tbl_bank`
--
ALTER TABLE `tbl_bank`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `tbl_bank`
--
ALTER TABLE `tbl_bank`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
COMMIT;


CREATE TABLE loan_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    loan_name VARCHAR(100) NOT NULL,
    service_charge DECIMAL(5,2) NOT NULL,
    interest_type_id INT, -- FK to a separate table for interest types (optional)
    interest_rate DECIMAL(5,2),
    insurance_premium DECIMAL(5,2),
    crb_amount DECIMAL(10,2),
    min_repayment_period INT,
    max_repayment_period INT,
    min_loan_limit DECIMAL(12,2),
    max_loan_limit DECIMAL(12,2),
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE interest_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



ALTER TABLE loan_types
ADD CONSTRAINT fk_interest_type
FOREIGN KEY (interest_type_id) REFERENCES interest_types(id);

17/04/2025

-- Loan Applications Table
CREATE TABLE loan_applications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    member_id INT NOT NULL,
    loan_type_id INT NOT NULL,
    interest_method VARCHAR(50),
    interest_rate DECIMAL(5,2),
    insurance_premium DECIMAL(5,2),
    crb_amount DECIMAL(10,2),
    service_charge DECIMAL(5,2),
    principal DECIMAL(12,2),
    repayment_period INT,
    request_date DATE,
    total_loan DECIMAL(12,2),
    total_interest DECIMAL(12,2),
    fees DECIMAL(12,2),
    monthly_repayment DECIMAL(12,2),
    disburse_amount DECIMAL(12,2),
    loan_status ENUM('approved', 'rejected', 'pending')
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Guarantors Table
CREATE TABLE loan_guarantors (
    id INT AUTO_INCREMENT PRIMARY KEY,
    loan_application_id INT NOT NULL,
    guarantor_member_no VARCHAR(20) NOT NULL,
    name VARCHAR(100),
    mobile VARCHAR(20),
    amount DECIMAL(12,2),
    FOREIGN KEY (loan_application_id) REFERENCES loan_applications(id) ON DELETE CASCADE
);



18/04/2025
ALTER TABLE `loan_applications` ADD `loan_status` ENUM('approved', 'rejected', 'pending') NOT NULL AFTER `disburse_amount`; 



20/04/2025

CREATE TABLE loan_repayments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    loan_id INT NOT NULL,
    installment_number INT NOT NULL,
    due_date DATE NOT NULL,
    amount_due DECIMAL(10,2) NOT NULL,
    amount_paid DECIMAL(10,2) DEFAULT 0.00,
    payment_date DATE DEFAULT NULL,
    status ENUM('pending', 'paid', 'overdue') DEFAULT 'pending',
    payment_method VARCHAR(50) DEFAULT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (loan_id) REFERENCES loan_applications(id)
);


21/04/2025

CREATE TABLE `organization_profile` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `org_name` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(50),
  `email` VARCHAR(100),
  `postal_address` VARCHAR(255),
  `physical_address` VARCHAR(255),
  `logo` VARCHAR(255),
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `system_parameters` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `param_key` VARCHAR(100) UNIQUE NOT NULL,
  `param_value` TEXT,
  `description` TEXT
);


INSERT INTO system_parameters (param_key, param_value, description)
VALUES
('loan_interest_rate', '0.12', 'Default interest rate for loans'),
('enable_sms_notifications', 'true', 'Toggle SMS alerts'),
('end_of_year_closing', 'manual', 'Manual or automatic closing behavior');

24/4/2025
ALTER TABLE journal_entry_details
DROP FOREIGN KEY journal_entry_details_ibfk_2;


28/04/2025

INSERT INTO system_parameters (param_key, description, param_value) VALUES
('allow_member_self_registration', 'Allow members to register themselves online', 'false'),
('require_approval_for_new_members', 'New member applications require admin approval', 'true'),
('enable_sms_notifications', 'Send SMS notifications for transactions', 'true'),
('enable_email_notifications', 'Send email notifications for transactions', 'true'),
('show_member_balances_on_dashboard', 'Show member balances on their dashboard', 'true'),
('enable_mobile_money_integration', 'Integrate with mobile money services', 'true'),
('allow_member_document_upload', 'Allow members to upload ID, payslips, etc.', 'true'),
('enable_end_of_year_dividends', 'Enable dividend calculation at year-end', 'true'),
('require_beneficiary_for_registration', 'Require member to add a beneficiary when registering', 'true'),
('allow_members_to_view_statements_online', 'Members can view/download their statements', 'true'),
('send_sms_for_savings_deposit', 'Send SMS when a savings deposit is made', 'true'),
('send_sms_for_loan_repayment', 'Send SMS when a loan repayment is made', 'true'),
('enable_admin_email_alerts', 'Send alerts to admin email for key events', 'true'),
('maintenance_mode', 'Put the system into maintenance mode', 'false'),
('maintenance_message', 'Custom message to show during maintenance', 'We are upgrading, please check back soon.'),
('allow_member_password_reset', 'Allow members to reset their passwords', 'true'),
('allow_member_profile_update', 'Allow members to edit their own profile info', 'true'),
('enforce_unique_member_email', 'Require unique email address per member', 'true'),
('enable_member_login', 'Enable or disable member portal login', 'true'),
('show_announcements_on_member_dashboard', 'Show admin announcements on member dashboard', 'true');


ALTER TABLE `users` ADD COLUMN `permissions` TEXT DEFAULT NULL AFTER `role`;


ALTER TABLE `user` CHANGE `role` `role` ENUM('admin','member','user','agent','accountant', 'cashier') CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL; 


new changes

ALTER TABLE `journal_entry_details` CHANGE `transaction_id` `transaction_id` INT(11) NULL;

06/05/2025
ALTER TABLE `savings_accounts` ADD `balance` DECIMAL NOT NULL DEFAULT '0.00' AFTER `account_type`;

13/05/2025
ALTER TABLE transactions
ADD COLUMN reference VARCHAR(64) NOT NULL AFTER description;

ALTER TABLE transactions
ADD UNIQUE (reference);


15/05/2024

INSERT INTO `accounts` (`id`, `account_name`, `account_code`, `category`, `parent_id`) VALUES
(2, 'Debtors', '200100', 'asset', NULL),
(3, 'Current Bank Account', '200200', 'asset', NULL),
(4, 'Savings Bank Account', '200300', 'asset', NULL),
(5, 'Cash in Hand', '200400', 'asset', NULL),
(6, 'Creditors & Accruals', '300100', 'liability', NULL),
(70, 'Dividend & Interest', '300200', 'liability', NULL),
(71, 'Bank Overdraft', '300300', 'liability', NULL),
(72, 'Taxation', '300400', 'liability', NULL),
(73, 'Share Capital', '500100', 'equity', NULL),
(74, 'Customer Deposits', '300500', 'liability', 3),
(75, 'Entrance Fee', '600120', 'income', NULL),
(76, 'Statutory Reserve', '500400', 'equity', NULL),
(77, 'General Reserve', '500500', 'equity', NULL),
(78, 'Revaluation Account', '500600', 'equity', NULL),
(79, 'Retained Surplus', '500700', 'equity', NULL),
(80, 'Sinking Fund', '500800', 'equity', NULL),
(81, 'Current Year Accruals', '500900', 'equity', NULL),
(82, 'Interest on Loans', '600100', 'income', NULL),
(83, 'Rent Receivable', '600200', 'income', NULL),
(84, 'Interest on Deposits', '600300', 'income', NULL),
(85, 'Other Incomes', '600500', 'income', NULL),
(86, 'Customer Contributions Received', '600600', 'income', NULL),
(87, 'Administration Expenses', '700100', 'expense', NULL),
(88, 'Financial Expenses', '700200', 'expense', NULL),
(89, 'Establishment', '700300', 'expense', NULL),
(90, 'Depreciation', '700400', 'expense', NULL),
(91, 'Interest Charges', '700500', 'expense', NULL),
(92, 'Normal Loan', '110100', 'asset', 3),
(93, 'Loan Application fee', '600110', 'income', 3),
(94, 'Insurance Fees Recovered', '600210', 'income', 3),
(95, 'CRB Charges', '600130', 'income', 3),
(112, 'Salaries & Wages', '700110', 'expense', 3),
(113, 'Rent', '700120', 'expense', 3),
(114, 'Utilities', '700130', 'expense', 3),
(115, 'Software Subscription', '700140', 'expense', 3),
(116, 'Loan Defaults Written Off', '700210', 'expense', 3),
(117, 'Audit & Legal Fees', '700220', 'expense', 3),
(118, 'Travel & Logistics', '700230', 'expense', 3),
(119, 'SACCO Meeting', '700240', 'expense', 3);
(120, 'Loan Insurance Income', '600140', 'income', 3);


02/06/2025

CREATE TABLE staff (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    staff_number VARCHAR(20) UNIQUE NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL,
    gender ENUM('male', 'female', 'other') DEFAULT 'other',
    position VARCHAR(100),
    department VARCHAR(100),
    hire_date DATE,
    photo VARCHAR(100),
    status ENUM('active', 'inactive', 'terminated') DEFAULT 'active',
    user_id INT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES user(id)
);

04/06/2025
ALTER TABLE loan_repayments
ADD COLUMN principal_due DECIMAL(10,2) NOT NULL DEFAULT 0.00,
ADD COLUMN interest_due DECIMAL(10,2) NOT NULL DEFAULT 0.00,
ADD COLUMN principal_paid DECIMAL(10,2) NOT NULL DEFAULT 0.00,
ADD COLUMN interest_paid DECIMAL(10,2) NOT NULL DEFAULT 0.00
AFTER due_date;

ALTER TABLE loan_repayments MODIFY COLUMN amount_due DECIMAL(10,2) AS (principal_due + interest_due) STORED;

ALTER TABLE loan_repayments MODIFY COLUMN amount_paid DECIMAL(10,2) AS (principal_paid + interest_paid) STORED;

05/06/2025

ALTER TABLE `loan_applications` CHANGE `loan_status` `loan_status` ENUM('approved','rejected','pending','paid') CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL;

INSERT INTO `interest_types` (`id`, `name`, `description`, `created_at`, `updated_at`) VALUES (NULL, 'No Interest', 'No interest rate for the loan', current_timestamp(), current_timestamp());


14/06/2025

INSERT INTO `system_parameters` (`param_key`, `param_value`, `description`) VALUES
('last_closed_period', '2024-12', 'Last closed accounting period in YYYY-MM format');

INSERT INTO `system_parameters` (`id`, `param_key`, `param_value`, `description`) VALUES (NULL, 'loan_overpay_account', 'savings', 'Loan Overpayments to go to the following account');

-- Registration Form Table (site/member/new)
CREATE TABLE IF NOT EXISTS members_registration (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    dob DATE NOT NULL,
    id_number VARCHAR(50) NOT NULL,
    physical_address VARCHAR(255),
    postal_address VARCHAR(255),
    email VARCHAR(150) NOT NULL,
    phone_number VARCHAR(50) NOT NULL,
    area_chief VARCHAR(100),
    next_of_kin_name VARCHAR(100),
    next_of_kin_relationship VARCHAR(100),
    next_of_kin_address VARCHAR(255),
    next_of_kin_phone VARCHAR(50),
    next_of_kin_email VARCHAR(150),
    employer VARCHAR(150),
    personal_number VARCHAR(50),
    date_of_appointment DATE,
    working_station VARCHAR(150),
    employer_email VARCHAR(150),
    employment_type ENUM('permanent','temporary'),
    monthly_contribution DECIMAL(10,2),
    remittance_mode ENUM('payrollCheckOff','bankTransfer','mobileMoney'),
    employer_authorization TINYINT(1),
    business_name VARCHAR(150),
    business_postal_address VARCHAR(255),
    business_postal_code VARCHAR(20),
    business_nature VARCHAR(150),
    business_physical_location VARCHAR(255),
    mobile_banking TINYINT(1),
    beneficiary_first_name VARCHAR(100),
    beneficiary_last_name VARCHAR(100),
    beneficiary_dob DATE,
    beneficiary_id VARCHAR(50),
    beneficiary_relationship VARCHAR(100),
    entitlement_percentage VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE `refresh_tokens` (
  `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `member_no` VARCHAR(50) NOT NULL,
  `token` TEXT NOT NULL,
  `expires_at` DATETIME NOT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


22/7/2025

CREATE TABLE mobile_loans (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    member_id BIGINT UNSIGNED NOT NULL,
    amount_requested DECIMAL(12,2) NOT NULL,
    amount_approved DECIMAL(12,2) DEFAULT NULL,
    interest_rate DECIMAL(5,2) NOT NULL DEFAULT 5.00, -- customizable or fixed
    tenure_days INT NOT NULL DEFAULT 30, -- short-term: 7, 14, 30 days
    purpose TEXT DEFAULT NULL,
    
    status ENUM('pending', 'approved', 'declined', 'disbursed', 'repaid', 'defaulted') DEFAULT 'pending',
    
    application_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    approval_date DATETIME DEFAULT NULL,
    disbursed_at DATETIME DEFAULT NULL,
    due_date DATETIME DEFAULT NULL,
    repaid_at DATETIME DEFAULT NULL,

    repayment_method VARCHAR(50) DEFAULT 'mobile_money', -- optional
    mobile_transaction_id VARCHAR(100) DEFAULT NULL,

    remarks TEXT DEFAULT NULL,
    verified_by BIGINT UNSIGNED DEFAULT NULL, -- staff/admin ID
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

);
